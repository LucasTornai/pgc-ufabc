1:1-1:1::Memory.$trModule :: "GHC.Types.Module"
25:1-25:9::Memory.memAddrs :: "forall a .\nx1:(Memory.Mem a) -> {VV : (Data.Set.Internal.Set GHC.Types.Int) | VV == memAddrs x1}"
25:33-25:40::_ :: "{VV : forall a .\n      {v : (Data.Set.Internal.Set a) | Set_emp v\n                                       && v == empty} | VV == empty}"
26:33-26:74::GHC.Classes.$fOrdInt :: "{v : (GHC.Classes.Ord GHC.Types.Int) | v == $fOrdInt}"
26:41-26:59::lq_anf$##7205759403792806448 :: "{v : (Data.Set.Internal.Set GHC.Types.Int) | v == Set_sng addr\n                                             && v == singleton addr}"
26:54-26:58::addr :: "{v : GHC.Types.Int | v == addr}"
26:60-26:74::lq_anf$##7205759403792806449 :: "{v : (Data.Set.Internal.Set GHC.Types.Int) | v == memAddrs mem}"
26:70-26:73::mem :: "{v : (Memory.Mem a) | Set_cap (memAddrs v) (Set_sng addr) == Set_empty 0\n                      && v == mem}"
30:1-30:4::Memory.get :: "forall a .\nx1:GHC.Types.Int -> {mem : (Memory.Mem a) | Set_mem x1 (memAddrs mem)} -> a"
30:5-30:9::addr :: "GHC.Types.Int"
31:5-31:9::addr :: "{v : GHC.Types.Int | v == addr}"
31:13-31:18::addr' :: "{v : GHC.Types.Int | v == addr'}"
31:21-31:25::val' :: "{VV : a | VV == val'}"
32:21-32:33::Memory.get :: "forall a .\nx1:GHC.Types.Int -> {mem : (Memory.Mem a) | Set_mem x1 (memAddrs mem)} -> a"
32:25-32:29::addr :: "{v : GHC.Types.Int | v == addr}"
32:30-32:33::mem :: "{v : (Memory.Mem a) | Set_cap (memAddrs v) (Set_sng addr') == Set_empty 0\n                      && v == mem}"
37:1-37:4::Memory.set :: "forall a .\nx1:GHC.Types.Int -> a -> x3:(Memory.Mem a) -> {r : (Memory.Mem a) | memAddrs r == Set_cup (Set_sng x1) (memAddrs x3)}"
37:5-37:9::addr :: "GHC.Types.Int"
37:10-37:13::val :: "a"
37:21-37:40::lq_anf$##7205759403792806455 :: "{v : (Memory.Mem a) | memAddrs v == Set_empty 0\n                      && v == MEmp}"
37:27-37:31::addr :: "{v : GHC.Types.Int | v == addr}"
37:32-37:35::val :: "{VV : a | VV == val}"
37:36-37:40::_ :: "{VV : forall a .\n      {v : (Memory.Mem a) | memAddrs v == Set_empty 0\n                            && v == MEmp} | VV == MEmp}"
39:5-39:9::addr :: "{v : GHC.Types.Int | v == addr}"
39:13-39:18::addr' :: "{v : GHC.Types.Int | v == addr'}"
39:21-39:39::Memory.MCons :: "{VV : forall a .\n      x1:GHC.Types.Int -> x2:a -> x3:{v : (Memory.Mem a) | Set_cap (memAddrs v) (Set_sng x1) == Set_empty 0} -> {v : (Memory.Mem a) | mem v == x3\n                                                                                                                                      && val v == x2\n                                                                                                                                      && addr v == x1\n                                                                                                                                      && memAddrs v == Set_cup (Set_sng x1) (memAddrs x3)\n                                                                                                                                      && v == MCons x1 x2 x3} | VV == MCons}"
39:27-39:31::addr :: "{v : GHC.Types.Int | v == addr}"
39:32-39:35::val :: "{VV : a | VV == val}"
39:36-39:39::mem :: "{v : (Memory.Mem a) | Set_cap (memAddrs v) (Set_sng addr') == Set_empty 0\n                      && v == mem}"
40:21-40:56::Memory.MCons :: "{VV : forall a .\n      x1:GHC.Types.Int -> x2:a -> x3:{v : (Memory.Mem a) | Set_cap (memAddrs v) (Set_sng x1) == Set_empty 0} -> {v : (Memory.Mem a) | mem v == x3\n                                                                                                                                      && val v == x2\n                                                                                                                                      && addr v == x1\n                                                                                                                                      && memAddrs v == Set_cup (Set_sng x1) (memAddrs x3)\n                                                                                                                                      && v == MCons x1 x2 x3} | VV == MCons}"
40:27-40:32::addr' :: "{v : GHC.Types.Int | v == addr'}"
40:33-40:37::val' :: "{VV : a | VV == val'}"
40:38-40:56::lq_anf$##7205759403792806458 :: "{v : (Memory.Mem a) | memAddrs v == Set_cup (Set_sng addr) (memAddrs mem)\n                      && v == set addr val mem}"
40:43-40:47::addr :: "{v : GHC.Types.Int | v == addr}"
40:48-40:51::val :: "{VV : a | VV == val}"
40:52-40:55::mem :: "{v : (Memory.Mem a) | Set_cap (memAddrs v) (Set_sng addr') == Set_empty 0\n                      && v == mem}"
45:1-45:6::Memory.unset :: "forall a .\nx1:GHC.Types.Int -> x2:(Memory.Mem a) -> {r : (Memory.Mem a) | memAddrs r == Set_dif (memAddrs x2) (Set_sng x1)}"
45:7-45:11::addr :: "GHC.Types.Int"
45:19-45:23::_ :: "{VV : forall a .\n      {v : (Memory.Mem a) | memAddrs v == Set_empty 0\n                            && v == MEmp} | VV == MEmp}"
47:5-47:9::addr :: "{v : GHC.Types.Int | v == addr}"
47:13-47:18::addr' :: "{v : GHC.Types.Int | v == addr'}"
47:21-47:24::mem :: "{v : (Memory.Mem a) | Set_cap (memAddrs v) (Set_sng addr') == Set_empty 0\n                      && v == mem}"
48:21-48:54::Memory.MCons :: "{VV : forall a .\n      x1:GHC.Types.Int -> x2:a -> x3:{v : (Memory.Mem a) | Set_cap (memAddrs v) (Set_sng x1) == Set_empty 0} -> {v : (Memory.Mem a) | mem v == x3\n                                                                                                                                      && val v == x2\n                                                                                                                                      && addr v == x1\n                                                                                                                                      && memAddrs v == Set_cup (Set_sng x1) (memAddrs x3)\n                                                                                                                                      && v == MCons x1 x2 x3} | VV == MCons}"
48:27-48:32::addr' :: "{v : GHC.Types.Int | v == addr'}"
48:33-48:37::val' :: "{VV : a | VV == val'}"
48:38-48:54::lq_anf$##7205759403792806462 :: "{v : (Memory.Mem a) | memAddrs v == Set_dif (memAddrs mem) (Set_sng addr)\n                      && v == unset addr mem}"
48:45-48:49::addr :: "{v : GHC.Types.Int | v == addr}"
48:50-48:53::mem :: "{v : (Memory.Mem a) | Set_cap (memAddrs v) (Set_sng addr') == Set_empty 0\n                      && v == mem}"